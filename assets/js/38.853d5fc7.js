(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{313:function(t,a,s){"use strict";s.r(a);var r=s(14),n=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"堆和桟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆和桟"}},[t._v("#")]),t._v(" 堆和桟")]),t._v(" "),a("h3",{attrs:{id:"什么是堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是堆"}},[t._v("#")]),t._v(" 什么是堆？")]),t._v(" "),a("p",[t._v("堆：存储引用类型值的内存空间，堆中的对象是可变的，堆中的对象可以动态地增加或者减少。")]),t._v(" "),a("h3",{attrs:{id:"什么是栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是栈"}},[t._v("#")]),t._v(" 什么是栈？")]),t._v(" "),a("p",[t._v("栈：存储基本类型值和引用类型的内存空间，栈中的对象是固定不变的，栈中的对象不可以动态地增加或者减少。")]),t._v(" "),a("h3",{attrs:{id:"堆和栈的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆和栈的区别"}},[t._v("#")]),t._v(" 堆和栈的区别")]),t._v(" "),a("ol",[a("li",[t._v("栈是连续的内存空间，而堆是不连续的内存空间。")]),t._v(" "),a("li",[t._v("栈中的数据大小和生命周期是确定的，而堆中的数据大小和生命周期是动态的。")]),t._v(" "),a("li",[t._v("栈中的数据可以被直接访问，而堆中的数据需要通过引用来访问。")])]),t._v(" "),a("h3",{attrs:{id:"例题1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例题1"}},[t._v("#")]),t._v(" 例题1")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {b: 2}")]),t._v("\n")])])]),a("h3",{attrs:{id:"解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析"}},[t._v("#")]),t._v(" 解析")]),t._v(" "),a("ol",[a("li",[t._v("首先，在栈中创建变量a，并将a指向堆中的对象{b: 2}。")]),t._v(" "),a("li",[t._v("然后，在栈中创建变量c，并将c指向a指向的对象。")]),t._v(" "),a("li",[t._v("接着，将a指向堆中的对象3。")]),t._v(" "),a("li",[t._v("最后，输出c，c指向的对象是{b: 2}。")]),t._v(" "),a("li",[t._v("所以，c的值是{b: 2}。")]),t._v(" "),a("li",[t._v("a的值是3。")])]),t._v(" "),a("h3",{attrs:{id:"例题2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例题2"}},[t._v("#")]),t._v(" 例题2")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jack'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tom'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),a("h3",{attrs:{id:"解析-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析-2"}},[t._v("#")]),t._v(" 解析")]),t._v(" "),a("ol",[a("li",[t._v("首先，在栈中创建变量a，并将a指向堆中的空对象{}。")]),t._v(" "),a("li",[t._v("然后，在栈中创建变量b，并将b指向堆中的对象{name: 'jack'}。")]),t._v(" "),a("li",[t._v("接着，在栈中创建变量c，并将c指向堆中的对象{name: 'tom'}。")]),t._v(" "),a("li",[t._v("当对象 b 作为属性值的时候，会被自动转化（toSting()）为字符串 '[object Object]'。")]),t._v(" "),a("li",[t._v("a[c]同理，此时a[c] = a[b] = a['[object Object]'] = 2")]),t._v(" "),a("li",[t._v("所以最终输出 2")])])])}),[],!1,null,null,null);a.default=n.exports}}]);