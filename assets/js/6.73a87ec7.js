(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{273:function(t,v,_){t.exports=_.p+"assets/img/diff1.a4ed7085.png"},274:function(t,v,_){t.exports=_.p+"assets/img/diff.8d9e5abe.png"},291:function(t,v,_){"use strict";_.r(v);var i=_(14),e=Object(i.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"diff算法实现原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#diff算法实现原理"}},[t._v("#")]),t._v(" Diff算法实现原理")]),t._v(" "),v("h3",{attrs:{id:"vue2-的-diff-算法实现原理是"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue2-的-diff-算法实现原理是"}},[t._v("#")]),t._v(" vue2 的 diff 算法实现原理是")]),t._v(" "),v("p",[v("code",[t._v("同层比较；双端比较；在比较过程中，循环向中间靠拢")]),t._v("。"),v("br")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("同层比较，只会在同层比较，不会跨层比较。"),v("br"),t._v(" "),v("img",{attrs:{src:_(273),alt:"diff"}})])]),t._v(" "),v("li",[v("p",[t._v("双端比较，在比较过程中，循环向中间靠拢"),v("br"),t._v(" "),v("img",{attrs:{src:_(274),alt:"diff1"}})])])]),t._v(" "),v("ul",[v("li",[t._v("同时从新旧节点的头尾开始比较")]),t._v(" "),v("li",[t._v("如果头部或者尾部的节点相同，则复用节点，指针向中间靠拢。")]),t._v(" "),v("li",[t._v("如果头部或者尾部的节点不同，则尝试在旧节点中找到与新节点相同的节点，如果找到则复用节点，指针向中间靠拢。找不到则删除旧节点，添加新节点。")])]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[v("code",[t._v("key")]),t._v("的作用")])]),t._v(" "),v("ul",[v("li",[t._v("通过为每一个节点设置唯一的"),v("code",[t._v("key")]),t._v("，可以更准确的识别出那些节点可以复用，减少不必要的 DOM 操作，提高新能。")])]),t._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[t._v("patch函数\ndiff 算法最终通过 "),v("code",[t._v("patch")]),t._v("函数将差异应用到真实的 DOM 中。它的参数为（oldVnode, vnode, hydrating, removeOnly），作用如下：")])]),t._v(" "),v("ul",[v("li",[t._v("没有新的节点，则直接触发旧节点的 destroy钩子函数，删除旧节点。")]),t._v(" "),v("li",[t._v("没有旧节点，说明是页面新建，则直接触发新节点的 create 钩子函数，创建新节点。")]),t._v(" "),v("li",[t._v("新节点和旧节点相同，通过 sameVnode 函数判断，如果相同则触发 patchVnode 函数，进行精细化比较。")]),t._v(" "),v("li",[t._v("新节点和旧节点不同，则根据新节点的类型创建对应的 DOM 节点，并删除旧节点。")]),t._v(" "),v("li",[t._v("patchVnode 函数的作用，是对新旧节点的子节点进行 diff 比较和更新。")])]),t._v(" "),v("h3",{attrs:{id:"vue3-的-diff-算法的优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue3-的-diff-算法的优化"}},[t._v("#")]),t._v(" vue3 的 diff 算法的优化")]),t._v(" "),v("ol",[v("li",[t._v("静态提升：在编译阶段，将静态内容提升到渲染函数外部，避免每次更新是重复生成静态节点的开销，以及比较节点时，不需要比较静态节点。")]),t._v(" "),v("li",[t._v("PatchFlag，动态标记：为动态的节点打上标记，这使得在更新是可以直接定位到需要更新的节点，无需遍历整个节点树。")]),t._v(" "),v("li",[t._v("缓存事件处理函数：在编译阶段，将事件处理函数缓存起来，避免每次更新时重新生成事件处理函数。")]),t._v(" "),v("li",[t._v("Fragments：支持多个根节点的组件，使得在更新时，只需要更新根节点，无需遍历整个节点树。")]),t._v(" "),v("li",[t._v("Block：将多个节点打包成一个块，使得在更新时，只需要更新块内的节点，无需遍历整个节点树。")]),t._v(" "),v("li",[t._v("优化 diff 算法：使用最长递增子序列算法，减少了DOM移动操作。")])])])}),[],!1,null,null,null);v.default=e.exports}}]);