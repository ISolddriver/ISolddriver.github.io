(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{287:function(a,s,t){"use strict";t.r(s);var v=t(14),r=Object(v.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"canvas-和-svg-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#canvas-和-svg-的区别"}},[a._v("#")]),a._v(" canvas 和 svg 的区别")]),a._v(" "),s("p",[a._v("渲染模式本质的区别")]),a._v(" "),s("h3",{attrs:{id:"_1-canvas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-canvas"}},[a._v("#")]),a._v(" 1. canvas")]),a._v(" "),s("ul",[s("li",[a._v("位图渲染：基于像素操作，通过 js 绘制图形，生态静态位图图像，缩放会失真；")]),a._v(" "),s("li",[a._v("无保留对象：绘制完成后，所有元素合并为单一画布，无法单独操作已绘制的图形；")])]),a._v(" "),s("h3",{attrs:{id:"_2-svg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-svg"}},[a._v("#")]),a._v(" 2. svg")]),a._v(" "),s("ul",[s("li",[a._v("矢量渲染：基于 xml描绘图形，通过数学公式定义形状和路径，支持无损缩放；")]),a._v(" "),s("li",[a._v("保留独立对象：每个图形元素均为独立的 dom 节点，支持修改属性和绑定事件。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);