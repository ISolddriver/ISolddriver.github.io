(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{290:function(t,i,a){"use strict";a.r(i);var e=a(14),v=Object(e.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h2",{attrs:{id:"vuex-和-pinia"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#vuex-和-pinia"}},[t._v("#")]),t._v(" Vuex 和 Pinia")]),t._v(" "),i("p",[t._v("两者都是 vue 中的状态管理工具，帮助开发者管理应用中的全局状态，并提供了一种集中式的数据管理方式。")]),t._v(" "),i("h3",{attrs:{id:"vuex"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" Vuex")]),t._v(" "),i("ul",[i("li",[t._v("State：存储应用的状态数据。")]),t._v(" "),i("li",[t._v("Getters：用于派生出一些状态，类似于计算属性。")]),t._v(" "),i("li",[t._v("Mutations：同步地修改状态的方法。")]),t._v(" "),i("li",[t._v("Actions：用于处理异步操作，提交 mutations，可以包含异步操作。")]),t._v(" "),i("li",[t._v("Modules：将 Store 分割成模块。便于管理。")])]),t._v(" "),i("h3",{attrs:{id:"pinia"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#pinia"}},[t._v("#")]),t._v(" Pinia")]),t._v(" "),i("ul",[i("li",[t._v("State：存储应用的状态数据。")]),t._v(" "),i("li",[t._v("Getters：用于派生一些状态，类似于计算属性。")]),t._v(" "),i("li",[t._v("Actions：用于处理处理同步和异步操作，直接修改 State。")]),t._v(" "),i("li",[t._v("Stores：用于定义 Store，类似于 Vuex 的 Modules。")])]),t._v(" "),i("h3",{attrs:{id:"两者的区别"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#两者的区别"}},[t._v("#")]),t._v(" 两者的区别")]),t._v(" "),i("ul",[i("li",[t._v("Pinia 是 Vue 3 的官方状态管理库，而 Vuex 是 Vue 2 的状态管理库。")]),t._v(" "),i("li",[t._v("Pinia 使用的是 Composition API，而 Vuex 使用的是 Options API。")]),t._v(" "),i("li",[t._v("Pinia 的 API 更加简洁，易于理解和使用。")]),t._v(" "),i("li",[t._v("Pinia 支持热更新，而 Vuex 不支持。")]),t._v(" "),i("li",[t._v("Pinia 的代码更加简洁，易于维护。")]),t._v(" "),i("li",[t._v("Pinia 无需 Mutations，直接修改 State，而 Vuex 需要使用 Mutations 来修改 State。")])])])}),[],!1,null,null,null);i.default=v.exports}}]);